name: Release

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build_and_publish:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { version: "2.11.12", binary-version: "2.11", java-version: "8" }
          - { version: "2.12.11", binary-version: "2.12", java-version: "11" }
          - { version: "2.13.3", binary-version: "2.13", java-version: "11" }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.scala.java-version }}

      - name: Cache Coursier
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier
          key: ${{ runner.os }}-coursier-scala-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-coursier-scala-${{ matrix.scala.binary-version }}-

      - name: Cache Ivy
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy-scala-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-ivy-scala-${{ matrix.scala.binary-version }}-

      - name: Build for Scala ${{ matrix.scala.version }}
        run: |
          export GITHUB_TAG=${GITHUB_REF#refs/tags/}
          export CURRENT_BRANCH_NAME="${GITHUB_REF#refs/heads/:-}"
          if [ "${GITHUB_TAG:-}" != "" ]; then
            PROJECT_VERSION=$(echo "$GITHUB_TAG" | sed 's/^v//')
          else
            PROJECT_VERSION=$(git log --format=%H -1)
          fi
          .github/workflows/sbt-build.sh ${{ matrix.scala.version }} $PROJECT_VERSION

      - name: sbt Publish
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          export GITHUB_TAG=${GITHUB_REF#refs/tags/}
          export SCALA_VERSION=${{ matrix.scala.version }}
          if [ "${GITHUB_TAG:-}" != "" ]; then
            export PROJECT_VERSION=$(echo "$GITHUB_TAG" | sed 's/^v//')
          else
            export PROJECT_VERSION=$(git log --format=%H -1)
          fi

          .github/workflows/publish.sh

  # NOTE: Do not sync multiple repos to Maven Central in parallel. It's unsupported so will fail.
  publish_maven:
    needs: build_and_publish

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Sync to Maven Central
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          export GITHUB_TAG=${GITHUB_REF#refs/tags/}
          .github/workflows/maven_central_sync.sh

